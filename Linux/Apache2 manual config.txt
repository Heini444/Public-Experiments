Configure the Apache SSL Parameters
1: Let's create an SSL Parameters file and edit it

sudo nano /etc/apache2/conf-available/ssl-params.conf
2: Copy and paste the following set of directives:
SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
SSLProtocol All -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
SSLHonorCipherOrder On
# Disable preloading HSTS for now.  You can use the commented out header line that includes
# the "preload" directive if you understand the implications.
# Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
Header always set X-Frame-Options DENY
Header always set X-Content-Type-Options nosniff
# Requires Apache >= 2.4
SSLCompression off
SSLUseStapling on
SSLStaplingCache "shmcb:logs/stapling-cache(150000)"
# Requires Apache >= 2.4.11
SSLSessionTickets Off

Save and exit the buffer.

Configure the Apache Virtual Host

1: Create a backup of the respective default virtualhost configuration; This will make sure that Apache can revert to the older configuration incase of any syntax errors.
sudo cp /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-available/default-ssl.conf.bak

Proceed to the edit the default Apache Virtual Host Configuration
sudo nano /etc/apache2/sites-available/default-ssl.conf

Provide the proper directory and configuration name incase your have multiple virtual hosts on your server. This is for the default Virtual Host.3: Make sure the configuration matches with the format below. Replace yourdomain.com with your domain name and make sure to provide the correct paths for both the certificates and the private key.

<IfModule mod_ssl.c>
  <VirtualHost _default_:443>
    ServerAdmin youremail.com
    DocumentRoot /var/www/html
    ServerName yourdomain.com
    ServerAlias www.yourdomain.com

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined

    SSLEngine on

    SSLCertificateFile path-to-certificate.crt
    SSLCertificateKeyFile path-to-private-key.key
    SSLCertificateChainFile path-to-intermediate-cert.crt 

    <FilesMatch "\.(cgi|shtml|phtml|php)$">
      SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory /usr/lib/cgi-bin>
      SSLOptions +StdEnvVars
    </Directory>
  </VirtualHost>
</IfModule>

#Optional: Redirect HTTP to HTTPS
sudo nano /etc/apache2/sites-available/000-default.conf

#Replace the path if you have multiple virtual hosts set up.

<VirtualHost *:80>
  ServerAdmin youremail.com
  DocumentRoot /var/www/html
  ServerName yourdomain.com
  ServerAlias www.yourdomain.com
  Redirect "/" "https://your_domain_or_IP/"
</VirtualHost>

#Update the Firewall Settings
#Check the applications enabled by the Firewall
sudo ufw app list

#It is recommended that you have your firewall enabled and make sure to allow port 443 or type in the following command:
sudo ufw allow 443
sudo ufw allow 80

#This will allow both HTTP and HTTPS ports to allow incoming traffic. 443-HTTPS and 80-HTTP.

#Step 7: Enable the mod_ssl module and other configurations

#Enable the Apache mod_ssl and mod_headers module
sudo a2enmod ssl
sudo a2enmod headers

#Enable the default SSL Configuration
sudo a2ensite default-ssl

#Enable the default SSL Parameters file
sudo a2enconf ssl-params

#Test the Apache Configuration. If you get the message "Syntax Ok", then we're good to go. Do not worry about the ServerName Global Directive Error.
sudo apache2ctl configtest

#Restart the Apache WebServer and proceed to check your installation.
sudo systemctl restart apache2

#Check the SSL is working
https://www.ssllabs.com/ssltest/